# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.define "devops" do |devops|

    devops.vm.provider :virtualbox do |vb|
      vb.name = "devops"

      # Display the VirtualBox GUI when booting the machine
      vb.gui = true

      vb.customize ["modifyvm", :id, "--memory", "2048"]
    end

    # devops.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

    devops.vm.box = "ubuntu-xenial64"
    devops.vm.hostname = "devops.sudheer.io"
    devops.vm.network "private_network", ip: "192.168.55.10"

    # Share an additional folder to the guest VM. The first argument is
    # the path on the host to the actual folder. The second argument is
    # the path on the guest to mount the folder.
    # config.vm.synced_folder "../data", "/vagrant_data"

    # Installing necessary tools on the vm box
    config.vm.provision "shell", inline: <<-SHELL
      echo 'Provisioning necessary softwares on the Virtual Machine'
      echo '############################################################\n'
      echo '################## JDK, unzip and Curl Install started #####################'
      sudo apt-get update
      sudo add-apt-repository -y ppa:openjdk-r/ppa && apt-get update && apt-get install -y openjdk-8-jdk curl unzip
      java -version
      echo '################## JDK, unzip and Curl Install completed #####################\n'

      echo '############################################################\n'
      echo '################## Jenkins Install started #####################'
      sudo wget --no-check-certificate https://pkg.jenkins.io/debian-stable/binary/jenkins_2.73.1_all.deb
      sudo apt-get -f install -y
      sudo dpkg -i jenkins_2.73.1_all.deb
      # sudo sed 's/HTTP_PORT=8080/HTTP_PORT=9999/g' /etc/default/jenkins
      sudo service jenkins restart
      echo '################## Jenkins Install completed #####################\n'

      echo '############################################################\n'
      echo '################## Ansible Install started #####################'
      sudo apt-get install -y ansible
      ansible --version
      echo '################## Ansible Install completed #####################\n'

      echo '############################################################\n'
      echo '################## Docker Install started #####################'
      sudo apt-get install -y apt-transport-https ca-certificates software-properties-common
      sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      sudo apt-get update
      sudo apt-get install -y docker-ce
      docker --version
      sudo chmod 777 /var/run/docker.sock
      sudo usermod -aG docker jenkins
      sudo usermod -aG docker $USER
      echo '################## Docker Install completed #####################\n'

      echo '############################################################\n'
      echo '################## Artifactory and Sonar Setup started #####################'
      sudo wget --no-check-certificate https://bintray.com/jfrog/artifactory/download_file?file_path=jfrog-artifactory-oss-5.4.3.zip -O jfrog-artifactory-oss-5.4.3.zip
      sudo wget --no-check-certificate https://github.com/SonarSource/sonarqube/archive/5.6.6.zip -O sonarqube-5.6.6.zip
      sudo wget --no-check-certificate https://github.com/SonarSource/sonar-scanner-cli/archive/3.0.3.778.zip -O sonar-scanner-cli-3.0.3.778.zip

      sudo unzip jfrog-artifactory-oss-5.4.3.zip
      mkdir -p ~/DEVOPS-TOOLS/
      sudo cp -R artifactory-oss-5.4.3/ ~/DEVOPS-TOOLS/
      echo 'Startup Script is available at ~/DEVOPS-TOOLS/artifactory-oss-5.4.3/bin/artifactory.sh <start | stop>'
      echo '################## Artifactory and Sonar Setup completed #####################\n'

      ## Install Nagios as well

    SHELL

  end

end
